<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!--<TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>-->
		<!--<TargetFrameworks>net8.0-android</TargetFrameworks>-->
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<!--
		<TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>-->
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>AndreasReitberger.ActiveDirectorySearch</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<LangVersion>12</LangVersion>

		<!-- Display name -->
		<ApplicationTitle>Active Directory Search</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.andreasreitberger.adsearch</ApplicationId>
		<ApplicationIdGuid>994757c2-e9ad-4039-b636-edcb855c723d</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
		<AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
		<AppxSymbolPackageEnabled>True</AppxSymbolPackageEnabled>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>

		<!-- Here you can choose if you want to build as executable or as package -->
		<!----><DefineConstants>$(DefineConstants);WinBuild_Exe</DefineConstants>
		<!--<DefineConstants>$(DefineConstants);WinBuild_Package</DefineConstants>-->
	</PropertyGroup>

	<!-- Windows build settings for Windows (Executable)-->
	<PropertyGroup Condition="'$(DefineConstants.Contains(WinBuild_Exe))'">
		<!-- https://stackoverflow.com/a/75589936/10083577 -->
		<WindowsPackageType Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">None</WindowsPackageType>
		<WindowsAppSDKSelfContained Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">true</WindowsAppSDKSelfContained>
		<WindowsAppSdkDeploymentManagerInitialize Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">false</WindowsAppSdkDeploymentManagerInitialize>
		<!-- set false to build an exe file instead -->
		<GenerateAppxPackageOnBuild>false</GenerateAppxPackageOnBuild>
		<!--
		<AppxBundle>Always</AppxBundle>
		<AppxBundlePlatforms>x86|x64|arm</AppxBundlePlatforms>
		-->
	</PropertyGroup>
	<!-- Windows build settings for Windows (Package)-->
	<PropertyGroup Condition="'$(DefineConstants.Contains(WinBuild_Package))'">
		<GenerateAppxPackageOnBuild>true</GenerateAppxPackageOnBuild>
		<AppxBundle>Always</AppxBundle>
		<AppxBundlePlatforms>x86|x64|arm</AppxBundlePlatforms>
	</PropertyGroup>
	
	<!-- Signing -->
	<PropertyGroup>
		<AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
		<PackageCertificateThumbprint>874C34D76D0750519E23E065A42F0EE1268C31D6</PackageCertificateThumbprint>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
	</PropertyGroup>
	
	<PropertyGroup>
		<BeautySharedRuntimeMode>False</BeautySharedRuntimeMode>
		<BeautyLibsDir Condition="$(BeautySharedRuntimeMode) == 'True'">../lib</BeautyLibsDir>
		<BeautyLibsDir Condition="$(BeautySharedRuntimeMode) != 'True'">./lib</BeautyLibsDir>
		<!-- Exclude files if necessary
		<BeautyExcludes>NETworkManager.Models.dll</BeautyExcludes>
		-->
		<!-- Hidden files are not supported by Compress-Archive (Portable, Archive) and InnoSetup (Installer)
		<BeautyHiddens>*.deps.json;*.runtimeconfig.json;*.dll.config</BeautyHiddens>
		-->
		<DisableBeauty>True</DisableBeauty>
		<BeautyOnPublishOnly>False</BeautyOnPublishOnly>
		<BeautyEnableDebugging>False</BeautyEnableDebugging>
		<BeautyUsePatch>False</BeautyUsePatch>
		<BeautyLogLevel>Info</BeautyLogLevel>
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
	</PropertyGroup>
	
	<!-- https://learn.microsoft.com/en-us/dotnet/maui/windows/deployment/publish-cli -->
	<PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows' and '$(Configuration)' == 'Release'">
		<AppxPackageSigningEnabled>true</AppxPackageSigningEnabled>
		<PackageCertificateThumbprint>874C34D76D0750519E23E065A42F0EE1268C31D6</PackageCertificateThumbprint>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
	</PropertyGroup>
	<PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows' and '$(RuntimeIdentifierOverride)' != ''">
		<RuntimeIdentifier>$(RuntimeIdentifierOverride)</RuntimeIdentifier>
	</PropertyGroup>
	  
	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#ffffff" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="8.0.20" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="8.0.20" />
		<PackageReference Include="nulastudio.NetBeauty" Version="2.1.4.4" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="CommunityToolkit.Maui" Version="8.0.1" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="SettingsMaui" Version="1.0.6" />
		<PackageReference Include="SharedMauiXamlStylesLibrary" Version="1.2.7" />
		<PackageReference Include="System.Net.Sockets" Version="4.3.0" />
		<PackageReference Include="System.DirectoryServices" Version="8.0.0" />
	</ItemGroup>
	
	<ItemGroup>
	  <Compile Update="Resources\Localization\Strings.Designer.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>Strings.resx</DependentUpon>
	  </Compile>
	  <Compile Update="Themes\ItemTemplates\ListViewItemTemplates.xaml.cs">
	    <DependentUpon>ListViewItemTemplates.xaml</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Update="Resources\Localization\Strings.resx">
	    <Generator>PublicResXFileCodeGenerator</Generator>
	    <LastGenOutput>Strings.Designer.cs</LastGenOutput>
	  </EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="Themes\DefaultColors.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Themes\DefaultTheme.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Themes\ItemTemplates\ListViewItemTemplates.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

</Project>
